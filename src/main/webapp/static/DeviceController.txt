package com.yihuacomputer.fish.web.basic.device;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.RandomAccessFile;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.annotation.PostConstruct;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFDataFormat;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;


import com.yihuacomputer.common.FishCfg;
import com.yihuacomputer.common.FishConstant;
import com.yihuacomputer.common.IFilter;
import com.yihuacomputer.common.IPageResult;
import com.yihuacomputer.common.ITypeIP;
import com.yihuacomputer.common.exception.AppException;
import com.yihuacomputer.common.exception.NotFoundException;
import com.yihuacomputer.common.filter.Filter;
import com.yihuacomputer.common.jackson.JsonUtils;
import com.yihuacomputer.common.util.DateUtils;
import com.yihuacomputer.common.util.EntityUtils;
import com.yihuacomputer.common.util.IP;
import com.yihuacomputer.common.util.StringUtils;
import com.yihuacomputer.fish.api.atm.IAtmType;
import com.yihuacomputer.fish.api.atm.IAtmTypeService;
import com.yihuacomputer.fish.api.device.AwayFlag;
import com.yihuacomputer.fish.api.device.CareLevel;
import com.yihuacomputer.fish.api.device.CashType;
import com.yihuacomputer.fish.api.device.IDevice;
import com.yihuacomputer.fish.api.device.IDeviceExtend;
import com.yihuacomputer.fish.api.device.IDeviceExtendService;
import com.yihuacomputer.fish.api.device.IDeviceMaintainOrg;
import com.yihuacomputer.fish.api.device.IDeviceMaintainOrgService;
import com.yihuacomputer.fish.api.device.IDeviceService;
import com.yihuacomputer.fish.api.device.PlaceType;
import com.yihuacomputer.fish.api.device.SetupType;
import com.yihuacomputer.fish.api.device.Status;
import com.yihuacomputer.fish.api.device.WorkType;
import com.yihuacomputer.fish.api.jsnx.IDeviceBatch;
import com.yihuacomputer.fish.api.jsnx.IDeviceBatchService;
import com.yihuacomputer.fish.api.person.IOrganization;
import com.yihuacomputer.fish.api.person.IOrganizationService;
import com.yihuacomputer.fish.api.person.IPerson;
import com.yihuacomputer.fish.api.person.IUser;
import com.yihuacomputer.fish.api.person.IUserLog;
import com.yihuacomputer.fish.api.person.IUserLogService;
import com.yihuacomputer.fish.api.person.IUserService;
import com.yihuacomputer.fish.api.person.OrganizationLevel;
import com.yihuacomputer.fish.api.person.OrganizationState;
import com.yihuacomputer.fish.api.person.UserSession;
import com.yihuacomputer.fish.api.relation.IDevicePersonRelation;
import com.yihuacomputer.fish.jsnx.entity.atmp.DeviceAtmp;
import com.yihuacomputer.fish.jsnx.entity.atmp.DeviceQuery;
import com.yihuacomputer.fish.jsnx.entity.atmp.DeviceUnique;
import com.yihuacomputer.fish.jsnx.service.AtmpService;
import com.yihuacomputer.fish.monitor.service.db.XfsService;
import com.yihuacomputer.fish.person.entity.Organization;
import com.yihuacomputer.fish.web.basic.format.device.AtmTypeForm;
import com.yihuacomputer.fish.web.basic.format.device.DeviceForm;
import com.yihuacomputer.fish.web.basic.format.device.DeviceStatusForm;
import com.yihuacomputer.fish.web.basic.format.person.PersonForm;
import com.yihuacomputer.fish.web.util.DownFromWebUtils;

/**
 * 璁惧淇℃伅 Controller绫�
 * 
 * @author liubo
 * @E-mail liubo-nj@yihuacomputer
 * @date 2014-7-1
 */
@Controller
@RequestMapping("/machine/device")
public class DeviceController {

	private Logger logger = LoggerFactory.getLogger(DeviceController.class);

	/**
	 * 璁惧鎺ュ彛
	 */
	@Autowired
	private IDeviceService deviceService;

	@Autowired
	private IDeviceExtendService deviceExtendService;

	/**
	 * 鏈烘瀯鎺ュ彛
	 */
	@Autowired
	private IOrganizationService orgService;

	/**
	 * 鍨嬪彿鎺ュ彛
	 */
	@Autowired
	private IAtmTypeService typeService;

	@Autowired
	private IUserService userService;

	@Autowired
	private IDevicePersonRelation devicePersonRelation;

	@Autowired
	private AtmpService atmpService;

	@Autowired
	private XfsService xfsService;

	@Autowired
	private IUserLogService logService;

	@Autowired
	private IDeviceMaintainOrgService deviceMaintainOrgService;

	@Autowired
	private IDeviceBatchService deviceBatchService;

	@PostConstruct
	public void init() {
	}

	

	/**
	 * 涓嬭浇瀵煎叆鏂囦欢妯℃澘锛�
	 */
	@RequestMapping(value = "/downloadMould", method = RequestMethod.GET)
	public void downloadMould(HttpServletRequest request, HttpServletResponse response) throws Exception {
		String path = request.getSession().getServletContext().getRealPath("resources/file/jsnx_device.xls");
		File file = new File(path);
		response.setHeader("Content-Disposition", "attachment; filename=\"" + DownFromWebUtils.encoderFileName(request, "jsnx_device.xls") + "\"");
		response.addHeader("Content-Length", "" + file.length());
		response.setContentType("application/x-msdownload;charset=UTF-8");
		OutputStream out = null;
		RandomAccessFile randomFile = new RandomAccessFile(file, "r");
		try {
			out = response.getOutputStream();
			int len = 0;
			long contentLength = 0;
			contentLength = contentLength + randomFile.length();
			randomFile.seek(0);
			byte[] cache = new byte[1024];
			while ((len = randomFile.read(cache)) != -1) {
				out.write(cache, 0, len);
				contentLength += len;
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			if (out != null) {
				out.close();
			}
			if (randomFile != null) {
				randomFile.close();
			}
		}
		request.getSession().setAttribute("operContent", "path=" + path);
	}

	/**
	 * 璁惧淇℃伅瀵煎叆
	 */
	@RequestMapping(value = "/importMould", method = RequestMethod.POST)
	@ResponseBody
	public String importMould(HttpServletRequest request, HttpServletResponse response, HttpServletRequest req) {
		response.setContentType("text/html;charset=UTF-8");// 瑙ｅ喅IE9 涓婁紶鏂囦欢涔辩爜闂
		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
		List<MultipartFile> files = multipartRequest.getFiles("file");
		MultipartFile file = files.get(0);
		if (!file.getOriginalFilename().isEmpty() && file.getSize() > 10485760) {
			return "{'success':false,'content':'瓒呰繃鏈�澶ф枃浠跺ぇ灏忛檺鍒讹紙鏈�澶�10M锛�'}";
		}
		String fileType = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf('.'));
		if (!((file.getOriginalFilename().equals("jsnx_device.xls")) || (file.getOriginalFilename().equals("jsnx_device.xlsx")))) {
			return "{'success':false,'content':'妯℃澘鏍煎紡鎴栧悕绉颁笉姝ｇ‘锛岃浣跨敤妯℃澘鏂囦欢瀵煎叆锛�'}";
		}
		// 鐢ㄤ簬璁板綍閲嶅鐨勭粓绔彿
		String terminalIdStr = "";
		// 鐢ㄤ簬璁板綍鎴愬姛鐨勮鏁�
		int successRows = 0;
		// excel琛ㄤ腑鎬昏鏁�
		int allRows = 0;
		// 鐢ㄤ簬璁板綍閲嶅鏈鍏ョ殑琛屾暟
		int repeat = 0;
		// 鐢ㄤ簬瀛樻斁楠岃瘉鎴愬姛鐨勮澶�
		List<IDevice> devices = new ArrayList<IDevice>();
		Workbook xls = null;
		if (!file.getOriginalFilename().isEmpty()) {
			try {
				File readFile = new File(FishCfg.getTempDir() + System.getProperty("file.separator") + UUID.randomUUID());
				file.transferTo(readFile);
				// 浠巈xcel鏂囦欢瑙ｆ瀽鏁版嵁锛�
				if (fileType.equals(".xls")) {
					xls = new HSSFWorkbook(new FileInputStream(readFile));// 鎸囧畾鏂囦欢
				} else if (fileType.equals(".xlsx")) {
					xls = new XSSFWorkbook(new FileInputStream(readFile));// 鎸囧畾鏂囦欢
				} else {
					return "{'success':false,'content':'鏂囦欢绫诲瀷涓嶇鍚堣姹�'}";
				}
				Sheet sheet = xls.getSheetAt(0);
				int rows = sheet.getPhysicalNumberOfRows();// 琛屾暟
				allRows = rows;
				if (rows <= 1) {
					return "{'success':false,'content':'鏂囦欢鍐呭涓嶈兘涓虹┖锛佽妫�鏌ワ紒'}";
				}

				for (int r = 1; r < rows; r++) {
					Row row = (Row) sheet.getRow(r);
					if (row == null) {
						continue;
					}
					IDevice device = deviceService.make();
					IDeviceExtend deviceExtend = deviceExtendService.make();

					Cell serCell0 = (Cell) row.getCell(0);
					Cell serCell1 = (Cell) row.getCell(1);
					Cell serCell2 = (Cell) row.getCell(2);
					Cell serCell3 = (Cell) row.getCell(3);
					Cell serCell4 = (Cell) row.getCell(4);
					Cell serCell5 = (Cell) row.getCell(5);
					Cell serCell6 = (Cell) row.getCell(6);
					Cell serCell7 = (Cell) row.getCell(7);
					Cell serCell8 = (Cell) row.getCell(8);
					Cell serCell9 = (Cell) row.getCell(9);
					Cell serCell10 = (Cell) row.getCell(10);
					Cell serCell11 = (Cell) row.getCell(11);
					Cell serCell12 = (Cell) row.getCell(12);
					Cell serCell13 = (Cell) row.getCell(13);
					Cell serCell14 = (Cell) row.getCell(14);
					Cell serCell15 = (Cell) row.getCell(15);
					Cell serCell16 = (Cell) row.getCell(16);
					Cell serCell17 = (Cell) row.getCell(17);
					Cell serCell18 = (Cell) row.getCell(18);
					Cell serCell19 = (Cell) row.getCell(19);
					Cell serCell20 = (Cell) row.getCell(20);
					Cell serCell21 = (Cell) row.getCell(21);
					Cell serCell22 = (Cell) row.getCell(22);
					Cell serCell23 = (Cell) row.getCell(23);
					Cell serCell24 = (Cell) row.getCell(24);
					Cell serCell25 = (Cell) row.getCell(25);
					Cell serCell26 = (Cell) row.getCell(26);
					Cell serCell27 = (Cell) row.getCell(27);
					Cell serCell28 = (Cell) row.getCell(28);
					Cell serCell29 = (Cell) row.getCell(29);
					Cell serCell30 = (Cell) row.getCell(30);
					Cell serCell31 = (Cell) row.getCell(31);
					Cell serCell32 = (Cell) row.getCell(32);
					Cell serCell33 = (Cell) row.getCell(33);
					Cell serCell34 = (Cell) row.getCell(34);
					Cell serCell35 = (Cell) row.getCell(35);
					Cell serCell36 = (Cell) row.getCell(36);
					Cell serCell37 = (Cell) row.getCell(37);
					Cell serCell38 = (Cell) row.getCell(38);
					Cell serCell39 = (Cell) row.getCell(39);
					Cell serCell40 = (Cell) row.getCell(40);
					Cell serCell41 = (Cell) row.getCell(41);
					Cell serCell42 = (Cell) row.getCell(42);
					Cell serCell43 = (Cell) row.getCell(43);
					Cell serCell44 = (Cell) row.getCell(44);
					Cell serCell45 = (Cell) row.getCell(45);
					Cell serCell46 = (Cell) row.getCell(46);
					Cell serCell47 = (Cell) row.getCell(47);
					Cell serCell48 = (Cell) row.getCell(48);
					Cell serCell49 = (Cell) row.getCell(49);
					Cell serCell50 = (Cell) row.getCell(50);
					Cell serCell51 = (Cell) row.getCell(51);
					Cell serCell52 = (Cell) row.getCell(52);
					Cell serCell53 = (Cell) row.getCell(53);
					Cell serCell54 = (Cell) row.getCell(54);
					Cell serCell55 = (Cell) row.getCell(55);
					Cell serCell56 = (Cell) row.getCell(56);
					Cell serCell57 = (Cell) row.getCell(57);
					Cell serCell58 = (Cell) row.getCell(58);
					Cell serCell59 = (Cell) row.getCell(59);
					Cell serCell60 = (Cell) row.getCell(60);
					Cell serCell61 = (Cell) row.getCell(61);
					Cell serCell62 = (Cell) row.getCell(62);
					Cell serCell63 = (Cell) row.getCell(63);
					Cell serCell64 = (Cell) row.getCell(64);
					Cell serCell65 = (Cell) row.getCell(65);
					Cell serCell66 = (Cell) row.getCell(66);

					// 楠岃瘉蹇呭～椤规槸鍚︿负绌�
					if (serCell0 == null || serCell1 == null || serCell2 == null || serCell3 == null || serCell4 == null || serCell5 == null || serCell6 == null || serCell7 == null || serCell8 == null || serCell9 == null || serCell10 == null || serCell11 == null || serCell12 == null || serCell13 == null || serCell14 == null || serCell15 == null || serCell16 == null || serCell17 == null
							|| serCell18 == null || serCell19 == null) {
						return "{'success':false,'content':'鏂囦欢涓�" + (r + 1) + "琛屾爣璁扮豢鐨勫垪瀛樺湪绌洪」锛佽妫�鏌ワ紒'}";
					}

					// 缁堢鍙�
					String terminalId = changeToString(serCell1);
					String regex4 = "[a-zA-Z0-9]{8}+$";
					if (!isMate(regex4, terminalId)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾缁堢鍙穄鐢�8浣嶆暟瀛椻��0-9鈥欐垨鑰呭瓧姣嶁�榓-zA-Z鈥欑粍鎴愶紝璇锋鏌ワ紒'}";
					}
					// 濡傛灉璇ョ粓绔彿宸茬粡瀵瑰簲浜嗚澶囷紝鎴戜滑鍒欒涓鸿繖鏄竴鏉￠噸澶嶇殑鏁版嵁锛屼笉鍋氬鐞�
					IDevice checkDevice = deviceService.get(terminalId);
					if (null != checkDevice) {
						terminalIdStr += terminalId + ",";
						repeat++;
						continue;
					}

					// 铏氭嫙鏌滃憳鍙�
					String virtual = changeToString(serCell0);
					if (virtual.length() > 12) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾铏氭嫙鏌滃憳鍙穄瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(12浣�)锛岃妫�鏌ワ紒'}";
					}
					String regex = "^[0-9][0-9A-Z]+$";
					if (!isMate(regex, virtual)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾铏氭嫙鏌滃憳鍙穄鐢辨暟瀛椻��0-9鈥欍�佸瓧姣嶁�楢-Z鈥�,鍙兘浠ユ暟瀛楀紑澶达紝璇锋鏌ワ紒'}";
					}
					String virtualOrg = virtual.substring(0, 9);
					IOrganization deviceOrg = orgService.getByCode(virtualOrg);
					if (deviceOrg == null) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾铏氭嫙鏌滃憳鍙穄瀵瑰簲鐨勬満鏋勪笉瀛樺湪锛岃妫�鏌ワ紒'}";
					}
					// 鏌ヨ鏈湴鏄惁鏈夎櫄鎷熸煖鍛樺彿淇℃伅銆�
					IDevice devVir = deviceService.getByVirtual(virtual);
					if (devVir != null) {
						if (devVir.getStatus() == Status.SCRAPPED) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾铏氭嫙鏌滃憳鍙穄淇℃伅宸茬粡鎶ュ簾锛岃妫�鏌ワ紒'}";
						} else {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾铏氭嫙鏌滃憳鍙穄淇℃伅宸插瓨鍦紝璇锋鏌ワ紒'}";
						}
					}

					// orgCode锛氭満鏋勭爜 orgName锛氭満鏋勫悕绉�
					String orgCode = changeToString(serCell2);
					String orgName = changeToString(serCell3);
					IOrganization organization = orgService.getByCode(orgCode);
					if (organization != null) {
						if (!(orgName.equals(organization.getName()))) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛屼腑[鏈烘瀯鐮乚鍜孾鏈烘瀯鍚嶇О]涓嶅尮閰嶏紝璇锋鏌ワ紒'}";
						}
						if (organization.getOrganizationState() != OrganizationState.START) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛屼腑[鏈烘瀯鍚嶇О]涓�" + orgName + "鐨勬満鏋勪笉鏄惎鐢ㄧ姸鎬侊紝璇锋鏌ワ紒'}";
						}
					} else {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛屼腑涓嶅瓨鍦╗鏈烘瀯鐮乚涓�" + orgCode + "鐨勬満鏋勶紝璇锋鏌ワ紒'}";
					}

					// 璁惧鍨嬪彿
					String str4 = changeToString(serCell4);
					IAtmType atmType = typeService.get(str4);
					if (atmType == null) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鍨嬪彿]涓嶅瓨鍦紝璇锋鏌ワ紒'}";
					}

					// 璁惧Ip
					String str5 = changeToString(serCell5);
					String[] ips = str5.split("\\.");
					if (ips.length == 4) {
						for (int i = 0; i < 4; i++) {
							try {
								int checkip = Integer.parseInt(ips[i]);
								if (checkip < 0 || checkip > 255) {
									return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧ip鍦板潃]鏁板瓧涓嶈兘灏忎簬0澶т簬255,璇锋鏌ワ紒'}";
								} else if (deviceService.getByIp(str5) != null) {
									return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧ip鍦板潃]宸茬粡琚叾浠栬澶囧崰鐢�,璇锋鏌ワ紒'}";
								}
							} catch (NumberFormatException e) {
								return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧ip鍦板潃]鍙兘鐢辨暟瀛楀拰鐐圭粍鍚�,璇锋鏌ワ紒'}";
							}
						}
					} else {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧ip鍦板潃]杈撳叆鏈夎,璇锋鏌ワ紒'}";
					}
					ITypeIP ip = new IP(str5);

					// 閾惰仈鍦板尯鏍囪瘑鐮�
					String obCode = changeToString(serCell6);
					String regex5 = "[0-9]{8}+$";
					if (!isMate(regex5, obCode)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾閾惰仈鍦板尯鏍囪瘑鐮乚鐢�8浣嶆暟瀛椻��0-9鈥欑粍鎴愶紝璇锋鏌ワ紒'}";
					}

					// MAC鍦板潃
					String mac = changeToString(serCell7);
					if (deviceService.getByMac(mac) != null) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾MAC鍦板潃]宸茬粡琚叾浠栬澶囦娇鐢�,璇锋鏌ワ紒'}";
					}
					String regex2 = "^[a-fA-F0-9]{2}-[a-fA-F0-9]{2}-[a-fA-F0-9]{2}-[a-fA-F0-9]{2}-[a-fA-F0-9]{2}-[a-fA-F0-9]{2}+$";
					if (!isMate(regex2, mac)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾MAC鍦板潃]杈撳叆涓嶇鍚堣鑼冿紝璇锋鏌ワ紒'}";
					}
					deviceExtend.setMac(mac);

					// 璁惧鍦板潃
					String address = changeToString(serCell8);
					if (address.length() > 30) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鍦板潃]杈撳叆瓒呰繃鏈�澶ч暱搴�30锛岃妫�鏌ワ紒'}";
					}
					device.setAddress(address);

					// 璁惧缁翠繚鍟�
					String str9 = changeToString(serCell9);
					IOrganization devService = null;
					try {
						devService = orgService.getByName(str9);
					} catch (NotFoundException e1) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧缁翠繚鍟哴涓嶅瓨鍦紝璇锋鏌ワ紒'}";
					}

					// 璁惧搴忓垪鍙�
					String serial = changeToString(serCell10);
					if (!serial.isEmpty()) {
						String regexSerial = "^[0-9a-zA-Z][0-9a-zA-Z-_.]+$";
						if (!isMate(regexSerial, serial)) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧搴忓垪鍙穄鐢卞瓧姣嶁�榓-z鈥欐垨鈥楢-Z鈥欍�佹暟瀛椻��0-9鈥欍�佸噺鍙封��-鈥欍�佷笅鍒掔嚎鈥榑鈥欏拰鐐瑰彿鈥�.鈥欙紝鍙兘浠ュ瓧姣嶆垨鏁板瓧寮�澶达紝璇锋鏌ワ紒'}";
						}
					}

					// 鎵�灞炵渷绾у尯鍒掍唬鐮�
					String provDivisionCd = changeToString(serCell11);
					String regexDivisionCd = "^[0-9]{6}+$";
					if (!isMate(regexDivisionCd, provDivisionCd)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鎵�灞炵渷绾у尯鍒掍唬鐮乚鐢�6浣嶆暟瀛楃粍鎴愶紝璇锋鏌ワ紒'}";
					}

					// 鎵�灞炲競绾у尯鍒掍唬鐮�
					String cityDivisionCd = changeToString(serCell12);
					if (!isMate(regexDivisionCd, cityDivisionCd)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鎵�灞炲競绾у尯鍒掍唬鐮乚鐢�6浣嶆暟瀛楃粍鎴愶紝璇锋鏌ワ紒'}";
					}

					// 鎵�灞炲尯绾у尯鍒掍唬鐮�
					String areaDivisionCd = changeToString(serCell13);
					if (!isMate(regexDivisionCd, areaDivisionCd)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鎵�灞炲尯绾у尯鍒掍唬鐮乚鐢�6浣嶆暟瀛楃粍鎴愶紝璇锋鏌ワ紒'}";
					}

					// 閭斂缂栫爜
					String zipCd = changeToString(serCell14);
					String regexZipCd = "^[0-9]{6}+$";
					if (!isMate(regexZipCd, zipCd)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾閭斂缂栫爜]鐢�6浣嶆暟瀛楃粍鎴愶紝璇锋鏌ワ紒'}";
					}

					// 閮ㄧ讲鍖哄煙鐗瑰緛
					String deployAreaChara = changeToString(serCell15);
					String regexDeployAreaChara = "^[0][1-8]{1}+$";
					if (!isMate(regexDeployAreaChara, deployAreaChara)) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾閮ㄧ讲鍖哄煙鐗瑰緛]鐢�2浣嶆暟瀛梉01銆�02銆�03銆�04銆�05銆�06銆�07銆�08]缁勬垚锛岃妫�鏌ワ紒'}";
					}

					// 鑱旀帴鏂瑰紡
					String connMd = changeToString(serCell16);
					if (!("I".equals(connMd) || "S".equals(connMd))) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鑱旀帴鏂瑰紡]鍙兘杈撳叆[I]鎴朳S]锛岃妫�鏌ワ紒'}";
					}

					// 鎿嶄綔绯荤粺鐗堟湰
					String osVersion = changeToString(serCell17);
					if (osVersion.length() > 20) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鎿嶄綔绯荤粺鐗堟湰]瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(20浣�)锛岃妫�鏌ワ紒'}";
					}

					// 杞欢鐗堟湰鍙�
					String softVersion = changeToString(serCell18);
					if (softVersion.length() > 30) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾杞欢鐗堟湰鍙穄瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(30浣�)锛岃妫�鏌ワ紒'}";
					}

					// 璁惧鐘舵��
					Status devStatus = null;
					if (changeToString(serCell19).indexOf('(') == -1) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鐘舵�乚杈撳叆鏈夎,璇疯緭鍏ユ纭舰寮忥紒渚嬶細[3(鍚敤)]銆傦紒'}";
					} else {
						String str11 = changeToString(serCell19).substring(0, changeToString(serCell19).indexOf('('));
						String regexNumble = "^[0-9]{1,2}";
						if (!isMate(regexNumble, str11)) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鐘舵�乚杈撳叆鏈夎,璇疯緭鍏ユ纭舰寮忥紒渚嬶細[3(鍚敤)]銆�'}";
						}
						devStatus = Status.getById(Integer.parseInt(str11));
					}

					// 鏄惁鍦ㄨ
					AwayFlag awayFlag = null;
					// 濡傛灉涓虹┖鍒欑粰瀹冧竴涓粯璁ゅ�硷紝鍚﹀垯鍒ゆ柇鍊肩殑鍚堟硶鎬�
					if (changeToString(serCell20).isEmpty()) {
						awayFlag = AwayFlag.FROM_THE_LINE;
					} else {
						if (changeToString(serCell20).indexOf('(') == -1) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鏄惁鍦ㄨ]杈撳叆鏈夎,鍙兘杈撳叆[1(鍦ㄨ鑷姪鏈嶅姟鍖�)]鎴栬�匸2(绂昏鑷姪閾惰)]鎴栬�匸3(鍗曟満绂昏鑷姪鏈嶅姟鐐�)]锛�'}";
						} else {
							String str11 = changeToString(serCell20).substring(0, changeToString(serCell20).indexOf('('));
							if (!("1".equals(str11) || "2".equals(str11) || "3".equals(str11))) {
								return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鏄惁鍦ㄨ]杈撳叆鏈夎,鍙兘杈撳叆[1(鍦ㄨ鑷姪鏈嶅姟鍖�)]鎴栬�匸2(绂昏鑷姪閾惰)]鎴栬�匸3(鍗曟満绂昏鑷姪鏈嶅姟鐐�)]锛�'}";
							}
							awayFlag = AwayFlag.getById(Integer.parseInt(str11));
						}
					}

					// 瀹夎鏂瑰紡
					SetupType setupType = null;
					if (!changeToString(serCell21).isEmpty()) {
						if (changeToString(serCell21).indexOf('(') == -1) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鏄惁鍦ㄨ]杈撳叆鏈夎,鍙兘杈撳叆[1(鍦ㄨ鑷姪鏈嶅姟鍖�)]鎴栬�匸2(绂昏鑷姪閾惰)]鎴栬�匸3(鍗曟満绂昏鑷姪鏈嶅姟鐐�)]锛�'}";
						} else {
							String str14 = changeToString(serCell21).substring(0, changeToString(serCell21).indexOf('('));
							if (!str14.isEmpty() && !("0".equals(str14) || "1".equals(str14))) {
								return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾瀹夎鏂瑰紡]杈撳叆鏈夎,鍙兘杈撳叆[0(绌垮)]鎴栬�匸1锛堝ぇ鍫傦級]锛�'}";
							}
							setupType = SetupType.getById(Integer.parseInt(str14));
						}
					} else {
						setupType = SetupType.WEAR_WALL;
					}

					// 缁忚惀鏂瑰紡
					WorkType workType = null;
					if (!changeToString(serCell22).isEmpty()) {
						if (changeToString(serCell22).indexOf('(') == -1) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾缁忚惀鏂瑰紡]杈撳叆鏈夎,鍙兘杈撳叆[1(鑷惀)]鎴栬�匸2(鍚堜綔)]鎴栬�匸3(澶栧寘)]锛�'}";
						} else {
							String str15 = changeToString(serCell22).substring(0, changeToString(serCell22).indexOf('('));
							if (!str15.isEmpty() && !("1".equals(str15) || "2".equals(str15) || "3".equals(str15))) {
								return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾缁忚惀鏂瑰紡]杈撳叆鏈夎,鍙兘杈撳叆[1(鑷惀)]鎴栬�匸2(鍚堜綔)]鎴栬�匸3(澶栧寘)]锛�'}";
							}
							workType = WorkType.getById(Integer.parseInt(str15));
						}
					} else {
						workType = WorkType.FROM_OPERATING;
					}

					// 寮�鏈烘椂闂�
					String openTime = changeToString(serCell23);
					if (openTime.isEmpty()) {
						deviceExtend.setOpenTime("00:00:00");
					} else {
						if (!checkTime(openTime)) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾寮�鏈烘椂闂碷杈撳叆涓嶇鍚堟椂闂存牸寮忥紝璇锋鏌ワ紒'}";
						}
						deviceExtend.setOpenTime(openTime);
					}

					// 鍏虫満鏃堕棿
					String closeTime = changeToString(serCell24);
					if (closeTime.isEmpty()) {
						deviceExtend.setCloseTime("23:59:59");
					} else {
						if (!checkTime(closeTime)) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鍏虫満鏃堕棿]杈撳叆涓嶇鍚堟椂闂存牸寮忥紝璇锋鏌ワ紒'}";
						}
						deviceExtend.setCloseTime(closeTime);
					}

					// 鏄惁鏀寔瑙嗛鎾斁
					String videoType = changeToString(serCell25);
					if (videoType != "") {
						if (!("0".equals(videoType) || "1".equals(videoType))) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鏄惁鏀寔瑙嗛鎾斁]杈撳叆鏈夎,鍙兘杈撳叆0鎴�1,璇锋鏌ワ紒'}";
						}
						deviceExtend.setVideoType(videoType);
					} else {
						deviceExtend.setVideoType("0");
					}

					// 璁惧鍏虫敞绋嬪害
					CareLevel careLevel = null;
					if (!changeToString(serCell26).isEmpty()) {
						if (changeToString(serCell26).indexOf('(') == -1) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鍏虫敞绋嬪害]杈撳叆鏈夎,鍙兘杈撳叆[1(閲嶇偣)]銆乕2锛堜腑绛夛級]鎴栬�匸3(涓�鑸�)]锛�'}";
						} else {
							String str20 = changeToString(serCell26).substring(0, changeToString(serCell26).indexOf('('));
							if (!str20.isEmpty() && !("1".equals(str20) || "2".equals(str20) || "3".equals(str20))) {
								return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鍏虫敞绋嬪害]杈撳叆鏈夎,鍙兘杈撳叆[1(閲嶇偣)]銆乕2锛堜腑绛夛級]鎴栬�匸3(涓�鑸�)]锛�'}";
							}
							careLevel = CareLevel.getById(Integer.parseInt(str20));
						}
					} else {
						careLevel = CareLevel.EMPHASIS;
					}

					// 闈炵幇閲戞爣蹇�
					CashType cashType = null;
					// 濡傛灉涓虹┖鍒欑粰瀹冧竴涓粯璁ゅ�硷紝鍚﹀垯鍒ゆ柇鍊肩殑鍚堟硶鎬�
					if (changeToString(serCell27).isEmpty()) {
						cashType = CashType.CASH;
					} else {
						if (changeToString(serCell27).indexOf('(') == -1) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾闈炵幇閲戞爣蹇梋杈撳叆鏈夎,鍙兘杈撳叆[1锛堢幇閲戯級]鎴栬�匸2锛堥潪鐜伴噾锛塢锛�'}";
						} else {
							String str10 = changeToString(serCell27).substring(0, changeToString(serCell27).indexOf('('));
							if (!("1".equals(str10) || "2".equals(str10))) {
								return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾闈炵幇閲戞爣蹇梋杈撳叆鏈夎,鍙兘杈撳叆[1锛堢幇閲戯級]鎴栬�匸2锛堥潪鐜伴噾锛塢锛�'}";
							}
							cashType = CashType.getById(Integer.parseInt(str10));
						}
					}

					// atmc杞欢
					String atmcSoft = changeToString(serCell28);
					if (atmcSoft.length() > 50) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾atmc杞欢]鏂囨湰闀垮害涓嶈兘瓒呰繃50锛岃妫�鏌ワ紒'}";
					}

					// 鍔犻挒鏈烘瀯
					String moneyOrg = changeToString(serCell29);
					if (moneyOrg.length() > 20) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鍔犻挒鏈烘瀯]鏂囨湰闀垮害涓嶈兘瓒呰繃20浣嶏紝璇锋鏌ワ紒'}";
					}

					// 鍘傚晢sp绫诲瀷
					String sp = changeToString(serCell30);
					if (sp.length() > 50) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鍘傚晢sp绫诲瀷]鏂囨湰闀垮害涓嶈兘瓒呰繃50浣嶏紝璇锋鏌ワ紒'}";
					}

					// 瀛樻斁浣嶇疆绫诲瀷
					PlaceType placeType = null;
					if (!changeToString(serCell31).isEmpty()) {
						if (changeToString(serCell31).indexOf('(') == -1) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾甯冩斁浣嶇疆绫诲瀷]杈撳叆鏈夎,鍙兘杈撳叆[1(鐪佷細鍩庡競)]銆乕2锛堝湴绾у競锛塢銆乕3(鍘垮煄)]銆乕4(涔￠晣)鎴朳5(琛屾斂锛堣嚜鐒讹級鏉�)]]锛�'}";
						} else {
							String str25 = changeToString(serCell31).substring(0, changeToString(serCell31).indexOf('('));
							if (!str25.isEmpty() && !("1".equals(str25) || "2".equals(str25) || "3".equals(str25) || "4".equals(str25) || "5".equals(str25))) {
								return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾甯冩斁浣嶇疆绫诲瀷]杈撳叆鏈夎,鍙兘杈撳叆[1(鐪佷細鍩庡競)]銆乕2锛堝湴绾у競锛塢銆乕3(鍘垮煄)]銆乕4(涔￠晣)鎴朳5(琛屾斂锛堣嚜鐒讹級鏉�)]]锛�'}";
							}
							placeType = PlaceType.getById(Integer.parseInt(str25));
						}
					} else {
						placeType = PlaceType.PRO_CAP;
					}

					// 绠＄悊鍛樼數璇�
					String managerPhone = changeToString(serCell32);
					String regex6 = "^[0-9]{8,11}";
					if (!isMate(regex6, managerPhone) && !managerPhone.isEmpty()) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾绠＄悊鍛樼數璇漖鍙兘杈撳叆8-11浣嶆暟瀛楋紝璇锋鏌ワ紒'}";
					}

					// 绠＄悊鍛樺鍚�
					String managerName = changeToString(serCell33);
					if (managerPhone.length() > 10) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾绠＄悊鍛樺鍚峕鏂囨湰闀垮害涓嶈兘瓒呰繃10锛岃妫�鏌ワ紒'}";
					}

					// 璁惧璐拱鏃ユ湡
					String buyDate = changeToString(serCell34);
					if (!buyDate.isEmpty()) {
						try {
							deviceExtend.setBuyDate(DateUtils.getDate(buyDate));
						} catch (AppException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧璐拱鏃ユ湡]鏍煎紡杈撳叆閿欒锛岃杈撳叆鈥測yyy-mm-dd鈥濇牸寮忕殑鏃堕棿锛�'}";
						}
					}

					// 璁惧瀹夎鏃ユ湡
					String installDate = changeToString(serCell35);
					if (!installDate.isEmpty()) {
						try {
							deviceExtend.setInstallDate(DateUtils.getDate(installDate));
						} catch (AppException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧瀹夎鏃ユ湡]鏍煎紡杈撳叆閿欒锛岃杈撳叆鈥測yyy-mm-dd鈥濇牸寮忕殑鏃堕棿锛�'}";
						}
					}

					// 璁惧鍚敤鏃ユ湡
					String startDate = changeToString(serCell36);
					if (!startDate.isEmpty()) {
						try {
							deviceExtend.setStartDate(DateUtils.getDate(startDate));
						} catch (AppException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鍚敤鏃ユ湡]鏍煎紡杈撳叆閿欒锛岃杈撳叆鈥測yyy-mm-dd鈥濇牸寮忕殑鏃堕棿锛�'}";
						}
					}

					// 璁惧鍋滅敤鏃ユ湡
					String stopDate = changeToString(serCell37);
					if (!stopDate.isEmpty()) {
						try {
							deviceExtend.setStopDate(DateUtils.getDate(stopDate));
						} catch (AppException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鍚敤鏃ユ湡]鏍煎紡杈撳叆閿欒锛岃杈撳叆鈥測yyy-mm-dd鈥濇牸寮忕殑鏃堕棿锛�'}";
						}
					}

					// 淇濅慨鍒版湡鏃ユ湡
					String expireDate = changeToString(serCell38);
					if (!expireDate.isEmpty()) {
						try {
							deviceExtend.setExpireDate(DateUtils.getDate(expireDate));
						} catch (AppException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾淇濅慨鍒版湡鏃ユ湡]鏍煎紡杈撳叆閿欒锛岃杈撳叆鈥測yyy-mm-dd鈥濇牸寮忕殑鏃堕棿锛�'}";
						}
					}

					// 涓婃宸℃鏃ユ湡
					String lastPmDate = changeToString(serCell39);
					if (!lastPmDate.isEmpty()) {
						try {
							deviceExtend.setLastPmDate(DateUtils.getDate(lastPmDate));
						} catch (AppException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾涓婃宸℃鏃ユ湡]鏍煎紡杈撳叆閿欒锛岃杈撳叆鈥測yyy-mm-dd鈥濇牸寮忕殑鏃堕棿锛�'}";
						}
					}

					// 宸℃鍒版湡鏃ユ湡
					String expirePmDate = changeToString(serCell40);
					if (!expirePmDate.isEmpty()) {
						try {
							deviceExtend.setExpirePmDate(DateUtils.getDate(expirePmDate));
						} catch (AppException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾宸℃鍒版湡鏃ユ湡]鏍煎紡杈撳叆閿欒锛岃杈撳叆鈥測yyy-mm-dd鈥濇牸寮忕殑鏃堕棿锛�'}";
						}
					}

					// 宸℃鍛ㄦ湡
					String patrolPeriod = changeToString(serCell41);
					if (!patrolPeriod.isEmpty()) {
						try {
							deviceExtend.setPatrolPeriod(Integer.parseInt(patrolPeriod));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾宸℃鍛ㄦ湡]杈撳叆鐨勪笉鏄竴涓ぇ浜�0鐨勬暣鏁帮紒'}";
						}
					}

					// 鍏ヨ处鎴愭湰
					String price = changeToString(serCell42);
					if (!price.isEmpty()) {
						try {
							deviceExtend.setPrice(Double.parseDouble(price));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鍏ヨ处鎴愭湰]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 鐗╀笟绉熻祦璐圭敤
					String governanceRent = changeToString(serCell43);
					if (!governanceRent.isEmpty()) {
						try {
							deviceExtend.setGovernanceRent(Double.parseDouble(governanceRent));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鐗╀笟绉熻祦璐圭敤]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 鐗╀笟绠＄悊璐圭敤
					String governanceCost = changeToString(serCell44);
					if (!governanceCost.isEmpty()) {
						try {
							deviceExtend.setGovernanceCost(Double.parseDouble(governanceCost));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鐗╀笟绠＄悊璐圭敤]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 鎶樻棫骞撮檺
					String depreciationLife = changeToString(serCell45);
					if (!depreciationLife.isEmpty()) {
						try {
							deviceExtend.setDepreciationLife(Double.parseDouble(depreciationLife));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鎶樻棫骞撮檺]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 閫氳绾胯矾璐圭敤
					String netCost = changeToString(serCell46);
					if (!netCost.isEmpty()) {
						try {
							deviceExtend.setNetCost(Double.parseDouble(netCost));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾閫氳绾胯矾璐圭敤]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 瑁呬慨璐圭敤
					String decoration = changeToString(serCell47);
					if (!decoration.isEmpty()) {
						try {
							deviceExtend.setDecoration(Double.parseDouble(decoration));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾瑁呬慨璐圭敤]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 鐢佃垂
					String powerCost = changeToString(serCell48);
					if (!powerCost.isEmpty()) {
						try {
							deviceExtend.setPowerCost(Double.parseDouble(powerCost));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鐢佃垂]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 瑁呬慨鎽婇攢骞撮檺锛堝勾锛�
					String decorationCost = changeToString(serCell49);
					if (!decorationCost.isEmpty()) {
						try {
							deviceExtend.setDecorationCost(Double.parseDouble(decorationCost));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾瑁呬慨鎽婇攢骞撮檺]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 鍔犻挒缁存姢璐圭敤
					String moneyCost = changeToString(serCell50);
					if (!moneyCost.isEmpty()) {
						try {
							deviceExtend.setMoneyCost(Double.parseDouble(moneyCost));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鍔犻挒缁存姢璐圭敤]杈撳叆鐨勪笉鏄竴涓皬鏁帮紒'}";
						}
					}

					// 璧勯噾鎴愭湰鍒╃巼
					String costInterest = changeToString(serCell51);
					deviceExtend.setCostInterest(costInterest);

					// 閮ㄧ讲鍖哄煙鍚嶇О
					String deployAreaNm = changeToString(serCell52);
					if (deployAreaNm.length() > 33) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾閮ㄧ讲鍖哄煙鍚嶇О]瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(33浣�)锛岃妫�鏌ワ紒'}";
					}

					// 璁惧鎶曡祫鏂逛唬鐮�
					String invstrInsIdCd = changeToString(serCell53);
					if (invstrInsIdCd.length() > 8) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾璁惧鎶曡祫鏂逛唬鐮乚瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(8浣�)锛岃妫�鏌ワ紒'}";
					}

					// 杩愯缁存姢鏂逛唬鐮�
					String maintnInsIdCd = changeToString(serCell54);
					if (maintnInsIdCd.length() > 8) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾杩愯缁存姢鏂逛唬鐮乚瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(8浣�)锛岃妫�鏌ワ紒'}";
					}

					// 澶栧崱鍙楃悊
					String frnAcptTp = changeToString(serCell55);
					if (!frnAcptTp.isEmpty()) {
						if (!("01".equals(frnAcptTp) || "02".equals(frnAcptTp) || "03".equals(frnAcptTp))) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾澶栧崱鍙楃悊]鍙兘杈撳叆[01]銆乕02]銆乕03]锛岃妫�鏌ワ紒'}";
						}
					}

					// 缁堢娓犻亾瀹ｄ紶
					String termPublicizeChnl = changeToString(serCell56);
					if (termPublicizeChnl.length() > 33) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾缁堢娓犻亾瀹ｄ紶]瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(33浣�)锛岃妫�鏌ワ紒'}";
					}

					// 缁堢閫氳鏂瑰紡
					String termConnMd = changeToString(serCell57);
					if (termConnMd.length() > 33) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾缁堢閫氳鏂瑰紡]瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(33浣�)锛岃妫�鏌ワ紒'}";
					}

					// 鎵爜鍔熻兘
					String scanIn = changeToString(serCell58);
					if (!scanIn.isEmpty() && !("0".equals(scanIn) || "1".equals(scanIn))) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鎵爜鍔熻兘]鍙兘杈撳叆[0]鎴朳1]锛岃妫�鏌ワ紒'}";
					}

					// 纾佹潯鍗¤鍙栧姛鑳�
					String magnReadIn = changeToString(serCell59);
					if (!scanIn.isEmpty() && !("0".equals(magnReadIn) || "1".equals(magnReadIn))) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾纾佹潯鍗¤鍙栧姛鑳絔鍙兘杈撳叆[0]鎴朳1]锛岃妫�鏌ワ紒'}";
					}

					// 鎺ヨЕ寮廔C鍗¤鍙栧姛鑳�
					String contICIn = changeToString(serCell60);
					if (!scanIn.isEmpty() && !("0".equals(contICIn) || "1".equals(contICIn))) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鎺ヨЕ寮廔C鍗¤鍙栧姛鑳絔鍙兘杈撳叆[0]鎴朳1]锛岃妫�鏌ワ紒'}";
					}

					// 闈炴帴IC鍗¤鍙栧姛鑳�
					String contlessIcIn = changeToString(serCell61);
					if (!scanIn.isEmpty() && !("0".equals(contlessIcIn) || "1".equals(contlessIcIn))) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾闈炴帴IC鍗¤鍙栧姛鑳絔鍙兘杈撳叆[0]鎴朳1]锛岃妫�鏌ワ紒'}";
					}

					// 鏃犲崱鏀粯鍔熻兘
					String ncardPayIn = changeToString(serCell62);
					if (!scanIn.isEmpty() && !("0".equals(ncardPayIn) || "1".equals(ncardPayIn))) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾鏃犲崱鏀粯鍔熻兘]鍙兘杈撳叆[0]鎴朳1]锛岃妫�鏌ワ紒'}";
					}

					// 鍙栨绠辨姤璀﹀紶鏁�
					String cashboxLimit = changeToString(serCell63);
					if (!cashboxLimit.isEmpty()) {
						try {
							device.setCashboxLimit(Integer.parseInt(cashboxLimit));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "[鍙栨绠辨姤璀﹀紶鏁癩杈撳叆鐨勪笉鏄暟瀛楋紝璇锋鏌ワ紒'}";
						}
					}

					// 瀛樻绠辨姤璀﹀紶鏁�
					String cashboxDeposit = changeToString(serCell64);
					if (!cashboxDeposit.isEmpty()) {
						try {
							device.setCashboxDeposit(Integer.parseInt(cashboxDeposit));
						} catch (NumberFormatException e) {
							return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "[瀛樻绠辨姤璀﹀紶鏁癩杈撳叆鐨勪笉鏄暟瀛楋紝璇锋鏌ワ紒'}";
						}
					}

					// 缁堢涓氬姟鍔熻兘
					String termTranFun = changeToString(serCell65);
					if (termTranFun.length() > 33) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾缁堢涓氬姟鍔熻兘]瓒呭嚭鏈�澶ч暱搴﹂檺鍒�(33浣�)锛岃妫�鏌ワ紒'}";
					}

					// 杩愯惀鍟�
					String carrier = changeToString(serCell66);
					if (carrier.length() > 20) {
						return "{'success':false,'content':'鏂囦欢绗�" + (r + 1) + "琛孾杩愯惀鍟哴鏂囨湰闀垮害涓嶈兘瓒呰繃20锛岃妫�鏌ワ紒'}";
					}

					UserSession userSession = (UserSession) request.getSession().getAttribute("SESSION_USER");
					IUser person = userService.get(userSession.getUserId());

					deviceExtend.setVirtual(virtual);
					deviceExtend.setObCode(obCode);
					deviceExtend.setSerial(serial);
					deviceExtend.setCarrier(carrier);
					deviceExtend.setMoneyOrg(moneyOrg);
					deviceExtend.setPlaceType(placeType);
					deviceExtend.setManagerPhone(managerPhone);
					deviceExtend.setManagerName(managerName);
					deviceExtend.setApplyId(person);
					deviceExtend.setApplyTime(new Date());
					deviceExtend.setApplyRemark("鏁版嵁瀵煎叆");
					deviceExtend.setTermConnMd(termConnMd);
					deviceExtend.setScanIn(scanIn);
					deviceExtend.setMagnReadIn(magnReadIn);
					deviceExtend.setContICIn(contICIn);
					deviceExtend.setContlessIcIn(contlessIcIn);
					deviceExtend.setNcardPayIn(ncardPayIn);
					deviceExtend.setTermTranFun(termTranFun);
					deviceExtend.setSoftVersion(softVersion);
					deviceExtend.setOsVersion(osVersion);
					deviceExtend.setConnMd(connMd);
					deviceExtend.setProvDivisionCd(provDivisionCd);
					deviceExtend.setCityDivisionCd(cityDivisionCd);
					deviceExtend.setAreaDivisionCd(areaDivisionCd);
					deviceExtend.setZipCd(zipCd);
					deviceExtend.setDeployAreaChara(deployAreaChara);
					deviceExtend.setDeployAreaNm(deployAreaNm);
					deviceExtend.setInvstrInsIdCd(invstrInsIdCd);
					deviceExtend.setMaintnInsIdCd(maintnInsIdCd);
					deviceExtend.setFrnAcptTp(frnAcptTp);
					deviceExtend.setTermPublicizeChnl(termPublicizeChnl);

					device.setTerminalId(terminalId);
					device.setOrganization(organization);
					device.setDevType(atmType);
					device.setCashType(cashType);
					device.setIp(ip);
					device.setAwayFlag(awayFlag);
					device.setDevService(devService);
					device.setSetupType(setupType);
					device.setWorkType(workType);
					device.setCareLevel(careLevel);
					device.setAtmcSoft(atmcSoft);
					device.setSp(sp);
					device.setStatus(devStatus);
					device.setDeviceExtend(deviceExtend);

					try {
						devices.add(device);
					} catch (Exception e) {
						logger.error(String.format("鍚庡彴澶勭悊鍑洪敊,閿欒鐮乕%s]", e));
					}
				}

				// 褰撴墍鏈夎褰曢獙璇侀兘閫氳繃鏃讹紝鍒欓獙璇乪xcel鏂囦欢涓褰曟槸鍚︽湁閲嶅铏氭嫙鏌滃憳鍙枫�佺粓绔彿銆乮p銆乵ac鍦板潃
				// 璇ュ绠楁硶璁捐鎬濇兂锛歟xcel涓涓�鏉¤澶囦俊鎭笉绠★紝绗簩鏉″紑濮嬩笌绗竴鏉℃瘮杈冿紝绗笁鏉′笌绗竴鏉°�佺浜屾潯姣旇緝锛屼互姝ょ被鎺ㄣ��
				for (int i = 0; i < devices.size(); i++) {
					for (int j = 0; j < i; j++) {
						if (i > 0) {
							if (devices.get(i).getDeviceExtend().getVirtual().equals(devices.get(j).getDeviceExtend().getVirtual())) {
								return "{'success':false,'content':'鏂囦欢绗�" + (j + 1) + "琛屽拰绗�" + (i + 1) + "琛岃櫄鎷熸煖鍛樺彿鐩稿悓锛岃妫�鏌ワ紒'}";
							}
							if (devices.get(i).getTerminalId().equals(devices.get(j).getTerminalId())) {
								return "{'success':false,'content':'鏂囦欢绗�" + (j + 1) + "琛屽拰绗�" + (i + 1) + "琛岀粓绔彿鐩稿悓锛岃妫�鏌ワ紒'}";
							}
							if (devices.get(i).getIp().equals(devices.get(j).getIp())) {
								return "{'success':false,'content':'鏂囦欢绗�" + (j + 1) + "琛屽拰绗�" + (i + 1) + "琛宨p鐩稿悓锛岃妫�鏌ワ紒'}";
							}
							if (devices.get(i).getDeviceExtend().getMac().equals(devices.get(j).getDeviceExtend().getMac())) {
								return "{'success':false,'content':'鏂囦欢绗�" + (j + 1) + "琛屽拰绗�" + (i + 1) + "琛孧AC鍦板潃鐩稿悓锛岃妫�鏌ワ紒'}";
							}
						}
					}
				}

				for (IDevice device : devices) {
					try {
						deviceService.add(device);
						successRows++;
					} catch (Exception e) {
						logger.error(String.format("鍚庡彴澶勭悊鍑洪敊,閿欒鐮乕%s]", e));
						return "{'success':false,'content':'鎴愬姛瀵煎叆" + successRows + "鏉★紝浣嗗湪绗�" + (successRows + 2) + "琛屽彂鐢熷紓甯革紒'}";
					}
				}
				if (allRows - successRows - 1 == 0) {
					return "{'success':true,'content':'瀵煎叆鎴愬姛" + successRows + "鏉�," + "閲嶅鏈鍏�:" + repeat + "鏉�.澶辫触:" + (allRows - successRows - 1 - repeat) + "'}";
				} else {
					return "{'success':true,'content':'瀵煎叆鎴愬姛" + successRows + "鏉�," + "閲嶅鏈鍏�:" + repeat + "鏉�.澶辫触:" + (allRows - successRows - 1 - repeat) + "鏉�.閲嶅鐨勭粓绔彿涓�" + terminalIdStr.substring(0, terminalIdStr.length() - 1) + "銆�'}";
				}
			} catch (Exception ex) {
				logger.error(String.format("鍚庡彴澶勭悊鍑洪敊,閿欒鐮乕%s]", ex));
				return "{'success':false,'content':'鍚庡彴绋嬪簭鍑虹幇寮傚父锛�'}";
			}
		}
		return "{'success':true}";
	}

	/**
	 * 灏咰ell瀵硅薄杞崲鎴怱tring绫诲瀷锛堝鍏ユ椂璋冪敤锛�
	 */
	public String changeToString(Cell cell) {
		String strCell = "";
		if (cell != null) {
			switch (cell.getCellType()) {
			case Cell.CELL_TYPE_FORMULA:
				break;
			case Cell.CELL_TYPE_NUMERIC:
				strCell = String.valueOf((long) cell.getNumericCellValue());
				break;
			case Cell.CELL_TYPE_STRING:
				strCell = cell.getStringCellValue();
				break;
			default:
			}
		}
		return strCell;
	}

	/**
	 * 鍒ゆ柇鏄惁鍖归厤姝ｅ垯琛ㄨ揪寮�
	 * 
	 * @param regex
	 * @param targetSting
	 * @return
	 */
	public Boolean isMate(String regex, String targetSting) {
		Pattern p = Pattern.compile(regex);
		Matcher m = p.matcher(targetSting);
		if (m.matches()) {
			return true;
		} else {
			return false;
		}
	}

	public Boolean checkTime(String time) {
		String[] times = time.split(":");
		if (times.length != 3) {
			return false;
		} else {
			try {
				if (Integer.parseInt(times[0]) < 0 || Integer.parseInt(times[0]) > 23) {
					return false;
				}
				if ((Integer.parseInt(times[1]) < 0 || Integer.parseInt(times[1]) > 59) || (Integer.parseInt(times[2]) < 0 || Integer.parseInt(times[2]) > 59)) {
					return false;
				}
			} catch (NumberFormatException e) {
				return false;
			}
		}
		return true;
	}
}
